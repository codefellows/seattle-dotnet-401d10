// <auto-generated />
using AsyncAPISolution.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsyncAPISolution.Migrations
{
    [DbContext(typeof(AsyncDbContext))]
    [Migration("20200407204808_addData")]
    partial class addData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsyncAPISolution.Models.Amenities", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Amenities");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Coffee Maker"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Mini Bar"
                        });
                });

            modelBuilder.Entity("AsyncAPISolution.Models.Hotel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            City = "Seattle",
                            Name = "Amanda's Hotel",
                            Phone = "123-456-8798",
                            State = "WA"
                        },
                        new
                        {
                            ID = 2,
                            City = "Seattle",
                            Name = "Josie's Hotel",
                            Phone = "123-852-8798",
                            State = "WA"
                        });
                });

            modelBuilder.Entity("AsyncAPISolution.Models.HotelRoom", b =>
                {
                    b.Property<int>("HotelID")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<bool>("PetFriendly")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("HotelID", "RoomNumber");

                    b.HasIndex("RoomID");

                    b.ToTable("HotelRooms");

                    b.HasData(
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 123,
                            PetFriendly = true,
                            Rate = 120m,
                            RoomID = 1
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 220,
                            PetFriendly = false,
                            Rate = 150m,
                            RoomID = 1
                        },
                        new
                        {
                            HotelID = 1,
                            RoomNumber = 101,
                            PetFriendly = false,
                            Rate = 75m,
                            RoomID = 2
                        },
                        new
                        {
                            HotelID = 2,
                            RoomNumber = 111,
                            PetFriendly = true,
                            Rate = 175m,
                            RoomID = 2
                        });
                });

            modelBuilder.Entity("AsyncAPISolution.Models.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Layout")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Layout = 1,
                            Name = "Princess Suite"
                        },
                        new
                        {
                            ID = 2,
                            Layout = 2,
                            Name = "Queen Suite"
                        });
                });

            modelBuilder.Entity("AsyncAPISolution.Models.RoomAmenities", b =>
                {
                    b.Property<int>("AmenitiesID")
                        .HasColumnType("int");

                    b.Property<int>("RoomID")
                        .HasColumnType("int");

                    b.HasKey("AmenitiesID", "RoomID");

                    b.HasIndex("RoomID");

                    b.ToTable("RoomAmenities");

                    b.HasData(
                        new
                        {
                            AmenitiesID = 1,
                            RoomID = 1
                        },
                        new
                        {
                            AmenitiesID = 2,
                            RoomID = 1
                        },
                        new
                        {
                            AmenitiesID = 1,
                            RoomID = 2
                        },
                        new
                        {
                            AmenitiesID = 2,
                            RoomID = 2
                        });
                });

            modelBuilder.Entity("AsyncAPISolution.Models.HotelRoom", b =>
                {
                    b.HasOne("AsyncAPISolution.Models.Hotel", "Hotel")
                        .WithMany("HotelRooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncAPISolution.Models.Room", "Room")
                        .WithMany("HotelRooms")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AsyncAPISolution.Models.RoomAmenities", b =>
                {
                    b.HasOne("AsyncAPISolution.Models.Amenities", "Amenities")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("AmenitiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AsyncAPISolution.Models.Room", "Room")
                        .WithMany("RoomAmenities")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
